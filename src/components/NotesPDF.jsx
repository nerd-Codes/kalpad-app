// src/components/NotesPDF.jsx
"use client";
import React from 'react';
import { Page, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';

// --- FONT REGISTRATION (Crucial for branding) ---
// Download these fonts from Google Fonts and place them in your /public folder
// Lexend: https://fonts.google.com/specimen/Lexend
// Inter: https://fonts.google.com/specimen/Inter
Font.register({
  family: 'Lexend',
  fonts: [
    { src: '/fonts/Lexend-Regular.ttf' },
    { src: '/fonts/Lexend-Bold.ttf', fontWeight: 'bold' },
  ],
});
Font.register({
  family: 'Inter',
  fonts: [
    { src: '/fonts/Inter-Regular.ttf' },
    { src: '/fonts/Inter-Bold.ttf', fontWeight: 'bold' },
    { src: '/fonts/Inter-Italic.ttf', fontStyle: 'italic' },
  ],
});


// --- STYLESHEET (Like CSS, but for the PDF) ---
const styles = StyleSheet.create({
  page: {
    paddingTop: 35,
    paddingBottom: 65,
    paddingHorizontal: 35,
    fontFamily: 'Inter',
    fontSize: 11,
    lineHeight: 1.5,
    color: '#333',
  },
  header: {
    fontSize: 24,
    marginBottom: 20,
    textAlign: 'center',
    color: '#111',
    fontFamily: 'Lexend',
    fontWeight: 'bold',
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 35,
    right: 35,
    textAlign: 'center',
    color: 'grey',
    fontSize: 8,
  },
  h2: { fontSize: 16, fontFamily: 'Lexend', fontWeight: 'bold', marginTop: 10, marginBottom: 5, borderBottom: '1px solid #eee', paddingBottom: 2 },
  h3: { fontSize: 13, fontFamily: 'Lexend', fontWeight: 'bold', marginTop: 8, marginBottom: 4 },
  p: { marginVertical: 4 },
  li: { marginLeft: 10, marginVertical: 2 },
  strong: { fontWeight: 'bold' },
  em: { fontStyle: 'italic' },
  latex: { fontStyle: 'italic', color: '#555' },
});


// --- The PDF Document Component ---
export const NotesPDF = ({ dayTopic }) => (
  <Document>
    <Page size="A4" style={styles.page} wrap>
      <Text style={styles.header}>{dayTopic.topic_name}</Text>
      
      {/* Simple Markdown to PDF Component Renderer */}
      <View>
        {dayTopic.generated_notes.split('\n').map((line, i) => {
          if (line.startsWith('## ')) return <Text key={i} style={styles.h2}>{line.substring(3)}</Text>;
          if (line.startsWith('### ')) return <Text key={i} style={styles.h3}>{line.substring(4)}</Text>;
          if (line.startsWith('* ')) return <Text key={i} style={styles.li}>â€¢ {line.substring(2)}</Text>;
          if (line.trim() === '') return <View key={i} style={{ height: 10 }} />;
          
          // Handle bold/italic within a line (simple version)
          // A full parser is complex, but this handles most cases.
          if (line.includes('**')) {
             return <Text key={i} style={styles.p}>
                {line.split('**').map((text, index) => (
                    <Text key={index} style={index % 2 !== 0 ? styles.strong : {}}>{text}</Text>
                ))}
            </Text>
          }

          // Handle LaTeX placeholders
          if (line.includes('$')) {
            return <Text key={i} style={styles.p}>
                {line.split('$').map((text, index) => (
                    <Text key={index} style={index % 2 !== 0 ? styles.latex : {}}>{text}</Text>
                ))}
            </Text>
          }

          return <Text key={i} style={styles.p}>{line}</Text>;
        })}
      </View>

      <Text style={styles.footer} fixed>
        Generated by KalPad ~ Page {' '}
        <Text render={({ pageNumber, totalPages }) => (`${pageNumber} / ${totalPages}`)} fixed />
      </Text>
    </Page>
  </Document>
);